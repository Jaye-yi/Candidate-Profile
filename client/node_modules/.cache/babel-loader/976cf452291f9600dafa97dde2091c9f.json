{"ast":null,"code":"import { SEARCH, FETCH_ALL, CREATE, UPDATE, MARK } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const searchPost = state => async dispatch => {\n  try {\n    console.log(\"type!\");\n    const {\n      data\n    } = await api.searchPost(state);\n    dispatch({\n      type: SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const searchName = name => async dispatch => {\n  try {\n    console.log(\"type name!\");\n    const {\n      data\n    } = await api.searchName(name);\n    dispatch({\n      type: SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    console.log(\"type create!\");\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: MARK,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}; // export const deletePost = (id) => async (dispatch) => {\n//   try {\n//     await api.deletePost(id);\n//     dispatch({ type: DELETE, payload: id });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };","map":{"version":3,"sources":["/Users/yina/Downloads/NU Fall 2021/11-19 copy/project_338/client/src/actions/posts.js"],"names":["SEARCH","FETCH_ALL","CREATE","UPDATE","MARK","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","searchPost","state","searchName","name","createPost","post","updatePost","id","likePost"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBU,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AACvD,MAAI;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,UAAJ,CAAeC,KAAf,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV,MAAR;AAAgBW,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJF,CAIG,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACH,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACtD,MAAI;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,IAAf,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV,MAAR;AAAgBW,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJF,CAIG,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACH,CARM;AAUP,OAAO,MAAMK,UAAU,GAAIC,IAAD,IAAU,MAAOd,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACe,UAAJ,CAAeC,IAAf,CAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,MAAR;AAAgBS,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMO,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOd,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACiB,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AAEAd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMS,QAAQ,GAAID,EAAD,IAAQ,MAAOhB,QAAP,IAAoB;AAClD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACmB,QAAJ,CAAaD,EAAb,CAAvB;AACAhB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,IAAR;AAAcO,MAAAA,OAAO,EAAEH;AAAvB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAPM,C,CASP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { SEARCH, FETCH_ALL, CREATE, UPDATE, MARK } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const searchPost = (state) => async (dispatch) => {\n  try {\n     console.log(\"type!\")\n     const { data } = await api.searchPost(state);\n     dispatch({ type: SEARCH, payload: data });\n   } catch (error) {\n     console.log(error.message);\n   }\n};\n\nexport const searchName = (name) => async (dispatch) => {\n  try {\n     console.log(\"type name!\")\n     const { data } = await api.searchName(name);\n     dispatch({ type: SEARCH, payload: data });\n   } catch (error) {\n     console.log(error.message);\n   }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n    console.log(\"type create!\")\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: MARK, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export const deletePost = (id) => async (dispatch) => {\n//   try {\n//     await api.deletePost(id);\n\n//     dispatch({ type: DELETE, payload: id });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\n"]},"metadata":{},"sourceType":"module"}