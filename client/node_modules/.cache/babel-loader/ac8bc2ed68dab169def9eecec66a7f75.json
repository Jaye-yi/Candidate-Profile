{"ast":null,"code":"var _jsxFileName = \"/Users/yina/Downloads/NU Fall 2021/11-19 copy/project_338/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    State: '',\n    Name: '',\n    Party: '',\n    Office: '',\n    Incumbent: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(Office => Office._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      State: '',\n      Name: '',\n      Party: '',\n      Office: '',\n      Incumbent: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Search by State'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"state\",\n    variant: \"outlined\",\n    label: \"State ('IL')\",\n    fullWidth: true,\n    value: postData.State,\n    onChange: e => setPostData({ ...postData,\n      State: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating or Editing a candidate'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Name\",\n    fullWidth: true,\n    value: postData.Name,\n    onChange: e => setPostData({ ...postData,\n      Name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Party\",\n    fullWidth: true,\n    value: postData.Party,\n    onChange: e => setPostData({ ...postData,\n      Party: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Office\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.Office,\n    onChange: e => setPostData({ ...postData,\n      Office: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated, e.g.Incumbent)\",\n    fullWidth: true,\n    value: postData.Incumbent,\n    onChange: e => setPostData({ ...postData,\n      Incumbent: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/yina/Downloads/NU Fall 2021/11-19 copy/project_338/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","State","Name","Party","Office","Incumbent","selectedFile","post","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","title","target","value","buttonSubmit","split","fileInput","base64"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ State:'', Name: '', Party: '', Office: '', Incumbent: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((Office) => Office._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ State:'', Name: '', Party: '', Office: '', Incumbent: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}> \n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Search by State'}</Typography>\n        <TextField name=\"state\" variant=\"outlined\" label=\"State ('IL')\" fullWidth value={postData.State} onChange={(e) => setPostData({ ...postData, State: e.target.value })} />\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Search</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating or Editing a candidate'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Name\" fullWidth value={postData.Name} onChange={(e) => setPostData({ ...postData, Name: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Party\" fullWidth value={postData.Party} onChange={(e) => setPostData({ ...postData, Party: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Office\" fullWidth multiline rows={4} value={postData.Office} onChange={(e) => setPostData({ ...postData, Office: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated, e.g.Incumbent)\" fullWidth value={postData.Incumbent} onChange={(e) => setPostData({ ...postData, Incumbent: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}