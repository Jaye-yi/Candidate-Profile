{"ast":null,"code":"var _jsxFileName = \"/Users/yina/Downloads/NU Fall 2021/11-19 copy/project_338/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost, searchPost, searchName, getPosts } from '../../actions/posts'; // import { searchPost } from '../../api';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    State: '',\n    Name: '',\n    Party: '',\n    Office: '',\n    Incumbent: '',\n    selectedFile: ''\n  }); // const post = useSelector((state) => (currentId ? state.posts.find((Office) => Office._id === currentId) : null));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const post = useSelector(state => currentId ? state.posts.find(Office => Office.this.state === currentId) : null);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      State: '',\n      Name: '',\n      Party: '',\n      Office: '',\n      Incumbent: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(e.State);\n\n    if (currentId === 0) {\n      // dispatch(createPost(postData));\n      // console.log(post.State);\n      if (postData.State != '') {\n        dispatch(searchPost(postData.State));\n      }\n\n      if (postData.Name != '') {\n        dispatch(searchName(postData.Name));\n      } //dispatch(searchName(postData.Name));\n      //dispatch(searchPost(postData.State));\n\n\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Search by State'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"state\",\n    variant: \"outlined\",\n    label: \"Search by State here: e.g. IL\",\n    fullWidth: true,\n    value: postData.State,\n    onChange: e => setPostData({ ...postData,\n      State: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    variant: \"outlined\",\n    label: \"Search by Full Name here\",\n    fullWidth: true,\n    value: postData.Name,\n    onChange: e => setPostData({ ...postData,\n      Name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"textPrimary\",\n    size: \"small\",\n    onClick: () => dispatch(getPosts()),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Show All Candidates\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/yina/Downloads/NU Fall 2021/11-19 copy/project_338/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","searchPost","searchName","getPosts","Form","currentId","setCurrentId","postData","setPostData","State","Name","Party","Office","Incumbent","selectedFile","dispatch","classes","post","state","posts","find","this","clear","handleSubmit","e","preventDefault","console","log","paper","root","form","title","target","value","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost, searchPost, searchName, getPosts } from '../../actions/posts';\n// import { searchPost } from '../../api';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ State:'', Name: '', Party: '', Office: '', Incumbent: '', selectedFile: '' });\n  // const post = useSelector((state) => (currentId ? state.posts.find((Office) => Office._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const post = useSelector((state) => (currentId ? state.posts.find((Office) => Office.this.state === currentId) : null));\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ State:'', Name: '', Party: '', Office: '', Incumbent: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(e.State);\n\n    if (currentId === 0) {\n      // dispatch(createPost(postData));\n      // console.log(post.State);\n\n      if (postData.State != ''){\n        dispatch(searchPost(postData.State));\n      }\n\n      if (postData.Name != ''){\n        dispatch(searchName(postData.Name));\n      }\n      \n      //dispatch(searchName(postData.Name));\n      //dispatch(searchPost(postData.State));\n  \n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}> \n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Search by State'}</Typography>\n        <TextField name=\"state\" variant=\"outlined\" label=\"Search by State here: e.g. IL\" fullWidth value={postData.State} onChange={(e) => setPostData({ ...postData, State: e.target.value })} />\n        <TextField name=\"name\" variant=\"outlined\" label=\"Search by Full Name here\" fullWidth value={postData.Name} onChange={(e) => setPostData({ ...postData, Name: e.target.value })} />\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Search</Button>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n        <Button className={classes.buttonSubmit}  variant=\"contained\" color=\"textPrimary\" size=\"small\" onClick={() => dispatch(getPosts())} fullWidth>Show All Candidates</Button>\n      </form>\n\n      {/* <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating or Editing a candidate'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Name\" fullWidth value={postData.Name} onChange={(e) => setPostData({ ...postData, Name: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Party\" fullWidth value={postData.Party} onChange={(e) => setPostData({ ...postData, Party: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Office\" fullWidth multiline rows={4} value={postData.Office} onChange={(e) => setPostData({ ...postData, Office: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated, e.g.Incumbent)\" fullWidth value={postData.Incumbent} onChange={(e) => setPostData({ ...postData, Incumbent: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form> */}\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}